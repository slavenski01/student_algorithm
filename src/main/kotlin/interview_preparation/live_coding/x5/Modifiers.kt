package interview_preparation.live_coding.x5

private open class Outer {
    private val a = 1
    protected open val b = 2
    internal open val c = 3
    val d = 4

    protected class Nested {
        public val e: Int = 5
    }
}

private class Subclass : Outer() {
    // Видны ли свойства и классы:
    // видимо ли a? нет, потому что приват
    // видимо ли b? да, модификатор протектед
    // видимо ли c? да, потому что наследник
    // видимо ли d? да, потому что паблик
    // видимо ли Nested? да, саб класс наследник
    // видимо ли e? да, паблик
}

private class Unrelated(o: Outer) {
    // Видны ли свойства и классы:
    // видимо ли o.a? нет, приватное
    // видимо ли o.b? нет, потому что протектед
    // видимо ли o.c? да, потому что в одном модуле
    // видимо ли o.d? да
    // видимо ли Outer.Nested и Nested::e? нет
}


// ------------ Ответы -------------- //

//Для класса Subclass:
//
//Видимо ли a? Нет, a является private и недоступно в подклассах.
//Видимо ли b? Да, b является protected и доступно в подклассах.
//Видимо ли c? Да, c является internal и доступно внутри того же модуля.
//Видимо ли d? Да, d имеет модификатор по умолчанию (public) и доступно везде.
//Видимо ли Nested? Да, Nested является protected и доступен в подклассах.
//Видимо ли e? Да, через доступ к Nested, свойство e (public) доступно.
//
//Для класса Unrelated:
//
//Видимо ли o.a? Нет, a является private и недоступно вне класса Outer.
//Видимо ли o.b? Нет, b является protected и недоступно вне подклассов Outer.
//Видимо ли o.c? Да, c является internal и доступно внутри того же модуля.
//Видимо ли o.d? Да, d является public и доступно везде.
//Видимо ли Outer.Nested и Nested::e? Нет, Nested является protected и недоступен вне подклассов Outer; соответственно, e также недоступно.