package yandex_traning.traning_1.lection2

/**
 * К сожалению, после чемпионата потерялись записи с фамилиями участников,
 * остались только записи о длине броска в том порядке, в котором их совершали участники.
 *
 * Трактиорист Василий помнит три факта:
 * 1) Число метров, на которое он метнул лепешку, оканчивалось на 5
 * 2) Один из победителей чемпионата метал лепешку до Василия
 * 3) Участник, метавший лепешку сразу после Василия, метнул ее на меньшее количество метров
 *
 * Будем считать, что участник соревнования занял k-е место,
 * если ровно (k − 1) участников чемпионата метнули лепешку строго дальше, чем он.
 *
 * Какое максимально высокое место мог занять Василий?
 *
 * Формат ввода
 * Первая строка входного файла содержит целое число
 * n — количество участников чемпионата по метанию лепешек (3 ≤ n ≤ 105).
 *
 * Вторая строка входного файла содержит n положительных целых чисел
 * каждое из которых не превышает 1000, — дальность броска участников чемпионата,
 * приведенные в том порядке, в котором происходило метание.
 *
 * Формат вывода
 * Выведите самое высокое место, которое мог занять тракторист Василий.
 * Если не существует ни одного участника чемпионата, который удовлетворяет,
 * описанным выше условиям, выведите число 0.
 *
 * Ввод
 * 7
 * 10 20 15 10 30 5 1
 *
 * Вывод
 * 6
 **/

fun main() {
    val strIn = readLine() ?: return
    val size = strIn.toInt()

    val strIn1 = readLine() ?: return
    val listNumbers = strIn1.split(" ").map { it.toInt() }

    println(hw5solve(listNumbers))
}

private fun hw5solve(list: List<Int>): Int {

    val maxListValue = list.maxOf { it }
    val sortFromMax = list.subList(list.indexOf(maxListValue), list.size)

    var maxAns = 0
    for (i in 1 until sortFromMax.size - 1) {
        if (sortFromMax[i] <= maxListValue
            && sortFromMax[i] > sortFromMax[i + 1]
            && sortFromMax[i] % 5 == 0
            && sortFromMax[i] % 10 != 0
        ) {
            if (sortFromMax[i] > maxAns) maxAns = sortFromMax[i]
        }
    }

    if (maxAns == 0) return 0

    var rating = 1
    list.forEach {
        if (it > maxAns) rating++
    }

    return rating
}